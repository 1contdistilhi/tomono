#!/usr/bin/env bash
# [[file:Readme.org::top-level][top-level]]
set -euo pipefail ${DEBUGSH+-x}

# Poor man’s arg parse 🤷‍♀️
arg="${1-}"
: "${MONOREPO_NAME:=core}"

if [[ "$arg" == "" ]]; then
	if [[ -d "$MONOREPO_NAME" && "$arg" != "--continue" ]]; then
		>&2 echo "monorepo directory $MONOREPO_NAME already exists"
		exit 1
	fi
	mkdir "$MONOREPO_NAME"
	cd "$MONOREPO_NAME"
	git init
elif [[ "$arg" != "--continue" ]]; then
	>&2 echo "Unexpected argument: $arg"
	>&2 echo
	>&2 echo "Usage: $0 [--continue]"
	exit 1
elif [[ ! -d "$MONOREPO_NAME" ]]; then
	>&2 echo "Asked to --continue, but monorepo directory $MONOREPO_NAME doesn’t exist"
	exit 1
else
	cd "$MONOREPO_NAME"
	# There isn’t anything special about --continue, really.
fi

(
	cd .git/refs
	mv tags tags-aux
)

while read repourl reponame; do
    git remote add "$reponame" "$repourl"
    git fetch --tags --atomic "$reponame"
    (
    	cd .git/refs
    	if [[ -d tags ]]; then
    		mv tags "tags-aux/$reponame"
    	fi
    )
    git branch -r --no-color --list "$reponame/*" --format "%(refname:lstrip=3)" | while read branch ; do
        if git checkout --orphan "$branch"; then
            git rm -rf . || :
            git commit --allow-empty -m "root commit for monorepo branch $branch"
        else
            git checkout "$branch"
        fi
        mkdir -p "$reponame"
        git merge --strategy=ours "$reponame/$branch" --allow-unrelated-histories --no-commit
        git --work-tree "./$reponame/" checkout "$reponame/$branch" -- .
        git add -A
        git commit -m "Merge $reponame/$branch"
    done
done

(
	cd .git/refs
	mv tags-aux tags
)

# Copyright © 2020, 2022 Hraban Luyat
# 
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, version 3 of the License.
# 
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
# 
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <https://www.gnu.org/licenses/>.
# top-level ends here
